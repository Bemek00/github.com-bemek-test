{"version":3,"sources":["podstrony/nawigacja.js","podstrony/home/home.js","podstrony/filtrowanie/filtrowanie.js","podstrony/notFound/notFound.js","podstrony/podzialStron/podzialstron.js","podstrony/zdarzenia/zdarzenia.js","App.js","serviceWorker.js","index.js"],"names":["Odsylacze","props","to","odsylacz","className","naglowek","Nawigacja","HeaderNawigacja","id","Home","userList","ListaUzytkownikow","users","length","map","user","key","Filtrowanie","state","filtrowaniUzytkownicy","type","onInput","e","filtrowanie","this","text","target","value","filtrowaniUzytkownicyPrzezTekst","setState","filter","toLowerCase","includes","React","Component","NotFound","PodzialStrony","tresc","ActionLink","href","onClick","preventDefault","console","log","Toggle","klik","stan","Zdarzenia","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9f2e6e7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./nawigacja.css\";\r\n\r\nfunction Odsylacze(props){\r\n    return(\r\n        <Link to={props.odsylacz} className=\"text\">{props.naglowek}</Link>\r\n    );\r\n}\r\n\r\nfunction Nawigacja(){\r\n    return(\r\n        <table>\r\n            <tr>\r\n                <td> <Odsylacze odsylacz=\"/test/\" naglowek=\"Home\" /> </td>\r\n                <td> <Odsylacze odsylacz=\"/test/filtrowanie\" naglowek=\"Filtrowanie\" /> </td>\r\n                <td> <Odsylacze odsylacz=\"/test/zdarzenia\" naglowek=\"Zdarzenia\" /> </td>\r\n                <td>  </td>\r\n                <td>  </td>\r\n            </tr>\r\n        </table>\r\n    );\r\n}\r\n\r\nfunction HeaderNawigacja(){\r\n    return(\r\n        <header className=\"headernaw\">\r\n            <div className=\"headernaw-div\">\r\n                <Nawigacja />\r\n            </div>\r\n            <hr id=\"linia\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default HeaderNawigacja;","import React from 'react';\r\n\r\nfunction Home(){\r\n    return(\r\n        <div>\r\n            Home\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './filtrowanie.css';\r\n\r\nconst userList = [\"Patryk\", \"Ania\", \"Amadeusz\", \"Mateusz\", \"Patrycja\", \"Adrianna\"];\r\n\r\nconst ListaUzytkownikow = (props) => {\r\n  if(props.users.length > 0){\r\n    return(\r\n      <ul className=\"filtrowanie-ul\"> \r\n        {props.users.map((user) => <li key={user}> {user} </li>)}\r\n      </ul>\r\n    );\r\n  }\r\n  else{\r\n    return(\r\n      <p className=\"filtrowanie-p\"> Brak wyników </p>\r\n    );\r\n  }\r\n}\r\n\r\nclass Filtrowanie extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {filtrowaniUzytkownicy: userList};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"filtrowanie\">\r\n                <input type=\"text\" className=\"filtrowanie-input\" onInput={(e) => this.filtrowanie(e)} />\r\n                <ListaUzytkownikow users={this.state.filtrowaniUzytkownicy} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    filtrowanie(e){\r\n        const text = e.target.value;\r\n        const filtrowaniUzytkownicy = this.filtrowaniUzytkownicyPrzezTekst(text);\r\n                    \r\n        this.setState({\r\n        filtrowaniUzytkownicy\r\n      });\r\n    }\r\n\r\n    filtrowaniUzytkownicyPrzezTekst(text){\r\n        return userList.filter((user) => user.toLowerCase().includes(text.toLowerCase()));\r\n    }\r\n}\r\n\r\nexport default Filtrowanie;","import React from 'react';\r\n\r\nfunction NotFound(){\r\n    return(\r\n        <div>\r\n            Nie znaleziono podstrony\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport './podzialstron.css';\r\n\r\nfunction PodzialStrony(props){\r\n    return(\r\n        <main className=\"mainpod\">\r\n            <div className=\"mainpod-div\">\r\n                {props.tresc}\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default PodzialStrony;","import React from 'react';\r\nimport './zdarzenia.css';\r\n\r\n\r\nfunction ActionLink() {\r\n    return(\r\n        <a href=\"#\" onClick={ActionLink}>\r\n            Kliknij \r\n        </a>\r\n    );\r\n\r\n    function ActionLink(e){\r\n        e.preventDefault();\r\n\r\n        console.log('Kliknieto');\r\n    }\r\n}\r\n\r\nclass Toggle extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {stan: false};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button onClick={this.klik}>\r\n                {this.state.stan ? \"Włączony\" : \"Wyłączony\"}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    klik = () => {\r\n        this.setState(state => ({\r\n            stan: !state.stan\r\n        }));\r\n    }\r\n}\r\n\r\n\r\nfunction Zdarzenia(){\r\n\r\n    return(\r\n        <div>\r\n            <ActionLink />\r\n            <hr />\r\n            <Toggle />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Zdarzenia;","import React from 'react';\nimport './App.css';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Nawigacja from './podstrony/nawigacja';\nimport Home from './podstrony/home/home';\nimport Filtrowanie from './podstrony/filtrowanie/filtrowanie';\nimport NotFound from './podstrony/notFound/notFound';\nimport PodzialStrony from './podstrony/podzialStron/podzialstron';\nimport Zdarzenia from './podstrony/zdarzenia/zdarzenia';\n\nfunction App(){\n  return(\n    <Router>\n      <div>\n        <Nawigacja />\n        <Switch>\n          <Route path=\"/test/\" exact>\n            <PodzialStrony tresc={<Home />} />\n          </Route>\n          <Route path=\"/test/filtrowanie\">\n            <PodzialStrony tresc={<Filtrowanie />} />\n          </Route>\n          <Route path=\"/test/zdarzenia\">\n            <PodzialStrony tresc={<Zdarzenia />} />\n          </Route>\n          <Route>\n            <PodzialStrony tresc={<NotFound />} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}